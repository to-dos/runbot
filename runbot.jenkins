pipeline {
    agent {
        label 'ubuntu_docker' // Укажите ноду с установленным Docker
    }
    parameters {
        string(name: 'APP_Name', defaultValue: 'test', description: 'Вкажіть юзера')
        choice(
            name: 'DB',
            description: "Choose PostgreSQL version"
            choices: ['15','14','13','12']
        )
        choice(
            name: 'Odoo',
            description: "Choose Odoo version"
            choices: ['18','17','16','15']
        )

    }
    options {
        timestamps()
    }
    stages {
        stage('Checkout Files') {
            steps {
                script {
                    // Клонирование репозитория
                    //sh "git clone --branch ${GIT_BRANCH} ${GIT_REPO} repo"
                    echo "will be clone repo"
                }
            }
        }
        stage('Update .env') {
            steps {
                script {
                    // Путь к .env файлу
                    def envFile = 'simple.env'

                    // Обновление файла с указанием выбранного образа
                    sh """
                    sed -i 's|^APP_Name.*|APP_Name=${APP_Name}|' ${envFile}
                    sed -i 's|^DB_IMAGE.*|DB_IMAGE=postgres:${DB}|' ${envFile}
                    sed -i 's|^Odoo_IMAGE.*|Odoo_IMAGE=odoo:${Odoo}|' ${envFile}
                    """
                    echo "Updated simple.env with APP_Name=${APP_Name}"
                }
            }
        }
        stage('Run Docker Compose') {
            steps {
                script {
                    def composeFile = 'simple.yml'
                    // Запуск docker-compose с обновленным .env файлом
                    sh """
                    docker-compose -f ${composeFile} -p ${APP_Name} --env-file simple.env up -d
                    """
                }
            }
        }
    }
    post {
        always {
            echo 'Пайплайн завершен!'
        }
    }
}